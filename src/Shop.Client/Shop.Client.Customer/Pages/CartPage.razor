@page "/cart"
@rendermode InteractiveServer

@if (_list.Items.Count < 1)
{
    <p class="text-center text-muted">Your cart is empty.</p>
}
else
{
    <div class="container mt-4">
        <div class="row">
            @foreach (var item in _list.Items)
            {
                <div class="col-md-4 mb-4">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <h4 class="card-title">@item.Product.Name</h4>
                            <p class="card-text">@item.Product.Description</p>
                            <p class="text-primary font-weight-bold">Price: @item.Product.Price.ToString("C")</p>
                            <p class="text-secondary">Quantity:</p>
                            <div class="d-flex align-items-center">
                                <button class="btn btn-outline-secondary" @onclick="() => HandleSetQuantityAsync(item.Id, item.Quantity - 1)">-</button>
                                <span class="mx-3">@item.Quantity</span>
                                <button class="btn btn-outline-secondary" @onclick="() => HandleSetQuantityAsync(item.Id, item.Quantity + 1)">+</button>
                            </div>
                            @if (item.Product.ImageData.Length > 0)
                            {
                                <img class="img-fluid rounded" 
                                     src="@($"data:image/png;base64,{Convert.ToBase64String(item.Product.ImageData)}")" 
                                     alt="@item.Product.Name"/>
                            }
                            <div class="mt-3 d-flex justify-content-between">
                                <button class="btn btn-danger" @onclick="() => HandleDeleteAsync(item.Id)">Remove</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="d-flex justify-content-center mt-4">
        @if (_list.Metadata.HasPreviousPage)
        {
            <button class="btn btn-primary me-2" @onclick="() => HandleLoadPageAsync(_list.Metadata.PageNumber - 1)">Previous</button>
        }
        <span class="align-self-center">Page @_list.Metadata.PageNumber of @_list.Metadata.TotalPages</span>
        @if (_list.Metadata.HasNextPage)
        {
            <button class="btn btn-primary ms-2" @onclick="() => HandleLoadPageAsync(_list.Metadata.PageNumber + 1)">Next</button>
        }
    </div>
}
